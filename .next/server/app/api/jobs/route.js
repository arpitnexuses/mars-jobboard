"use strict";(()=>{var e={};e.id=204,e.ids=[204],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9462:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>S,requestAsyncStorage:()=>y,routeModule:()=>l,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m});var o={};r.r(o),r.d(o,{GET:()=>c,POST:()=>u});var n=r(9303),i=r(8716),s=r(3131),a=r(7070),p=r(4184),d=r(5341);async function u(e){try{await (0,p.Z)();let t=await e.json(),r={...t,datePosted:t.datePosted?new Date(t.datePosted):new Date,expiryDate:new Date(t.expiryDate?t.expiryDate:Date.now()+2592e6)},o=await d.Z.create(r);return JSON.stringify(r.schema),a.NextResponse.json(o,{status:201})}catch(e){if(console.error("Error creating job:",e),11e3===e.code)return a.NextResponse.json({error:"A job with this ID already exists"},{status:409});if("ValidationError"===e.name)return a.NextResponse.json({error:"Validation Error",details:e.errors},{status:400});return a.NextResponse.json({error:"Internal Server Error",message:e.message},{status:500})}}async function c(){try{await (0,p.Z)();let e=await d.Z.find({}).sort({datePosted:-1}).lean();return a.NextResponse.json(e)}catch(e){return console.error("Error fetching jobs:",e),a.NextResponse.json({error:"Failed to fetch jobs"},{status:500})}}let l=new n.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/jobs/route",pathname:"/api/jobs",filename:"route",bundlePath:"app/api/jobs/route"},resolvedPagePath:"/Users/arpitmishra012/mars-jobboard/src/app/api/jobs/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:y,staticGenerationAsyncStorage:m,serverHooks:g}=l,x="/api/jobs/route";function S(){return(0,s.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},4184:(e,t,r)=>{r.d(t,{Z:()=>a});var o=r(1185),n=r.n(o);if(!process.env.MONGODB_URI)throw Error("Please define the MONGODB_URI environment variable inside .env");let i=process.env.MONGODB_URI,s=global.mongoose||{conn:null,promise:null},a=async function(){if(s.conn)return s.conn;s.promise||(s.promise=n().connect(i,{bufferCommands:!1,maxPoolSize:10,serverSelectionTimeoutMS:5e3,socketTimeoutMS:45e3}).then(e=>(console.log("Connected to MongoDB"),e)).catch(e=>{throw console.error("MongoDB connection error:",e),e}));try{s.conn=await s.promise}catch(e){throw s.promise=null,e}return s.conn}},5341:(e,t,r)=>{r.d(t,{Z:()=>s});var o=r(1185),n=r.n(o);let i=new(n()).Schema({title:{type:String,required:!0},company:{type:String,required:!0},companyUrl:{type:String,required:!0},companyLogo:{type:String,required:!0},industry:{type:String,required:!0},type:{type:String,required:!0},location:{country:{type:String,required:!0},state:{type:String,required:!0},city:{type:String,required:!0},street:{type:String,required:!0},zipCode:{type:String,required:!0}},description:{type:String,required:!0},responsibilities:[{type:String}],qualifications:[{type:String}],education:{type:String,required:!0},experience:{type:String,required:!0},datePosted:{type:Date,required:!0,default:Date.now},expiryDate:{type:Date,required:!0},schema:{type:Object}},{timestamps:!0});i.index({title:"text",description:"text"}),i.index({industry:1}),i.index({type:1}),i.index({"location.city":1});let s=n().models.Job||n().model("Job",i)}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[276,972],()=>r(9462));module.exports=o})();